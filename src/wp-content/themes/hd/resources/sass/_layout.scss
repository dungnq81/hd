//
// mixins
//

@import "flex_mixins";
@import "grid_mixins";

:root {
    --black: #{map-get($colors, "black")};
    --white: #{map-get($colors, "white")};
    --gray: #{map-get($colors, "gray")};
    --gray-dark: #{map-get($colors, "gray-dark")};
    --blue: #{map-get($colors, "blue")};
    --indigo: #{map-get($colors, "indigo")};
    --purple: #{map-get($colors, "purple")};
    --pink: #{map-get($colors, "pink")};
    --red: #{map-get($colors, "red")};
    --orange: #{map-get($colors, "orange")};
    --yellow: #{map-get($colors, "yellow")};
    --green: #{map-get($colors, "green")};
    --teal: #{map-get($colors, "teal")};
    --cyan: #{map-get($colors, "cyan")};

    --primary: #{map-get($theme-colors, "primary")};
    --secondary: #{map-get($theme-colors, "secondary")};
    --success: #{map-get($theme-colors, "success")};
    --info: #{map-get($theme-colors, "info")};
    --warning: #{map-get($theme-colors, "warning")};
    --alert: #{map-get($theme-colors, "alert")};
    --light: #{map-get($theme-colors, "light")};
    --dark: #{map-get($theme-colors, "dark")};

    --body-color: #{$body-color};
    --body-bg: #{$body-bg};

    --link-color: #{$link-color};
    --link-hover-color: #{$link-hover-color};

    --gutter: #{map-get($spacers, "gutter")};
    --gutter-xs: #{map-get($spacers, "gutter-xs")};
    --gap: #{map-get($spacers, "gap")};
    --gap-xs: #{map-get($spacers, "gap-xs")};

    --line-height-header: #{$line-height-header};
    --line-height-paragraph: #{$line-height-paragraph};

    --Primary-01: #{$Primary-01};
    --Primary-02: #{$Primary-02};
    --Secondary-01: #{$Secondary-01};
    --Secondary-02: #{$Secondary-02};
}

@include mq-min(desktop) {
    ::-webkit-scrollbar-track {
        background-color: $gray-200;
    }

    ::-webkit-scrollbar-thumb {
        background-color: $gray-500;
    }

    ::-webkit-scrollbar {
        @include box($scrollbar-w, $scrollbar-h);
    }
}

html {
    font-family: sans-serif;
    font-variant-ligatures: no-common-ligatures;
    text-size-adjust: 100%;
    -webkit-touch-callout: none;
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    color: $body-color;
    padding: 0;
    background: $body-bg;
    font-size: $body-size;
    font-weight: 400;
    font-family: $body-font;
    line-height: $line-height-global;
}

:is(input, select, textarea, button, main) {
    &:focus {
        outline: none;
    }
}

:is(a, button, [role="button"], input, select, textarea) {
    transition: 0.3s;
}

:is(a, area, button, [role="button"], input, label, select, summary, textarea) {
    touch-action: manipulation;
}

* > p {
    margin-top: 0;
    line-height: $line-height-paragraph;

    &:not(:last-child) {
        margin-bottom: $paragraph-margin-bottom;
    }

    &:last-child {
        margin-bottom: 0;
    }
}

:is(h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6) {
    font-family: $header-font;
    line-height: $line-height-header;
    margin-bottom: 15px;
    font-weight: 700;

    a {
        display: inline-block;
    }

    p {
        color: currentColor;
        line-height: inherit;
        margin-bottom: 0;
    }
}

a {
    display: inline-block;

    :where(h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6) {
        color: currentColor;
    }
}

img {
    display: inline-block;
    vertical-align: middle;
    max-width: 100%;
    height: auto;
    -ms-interpolation-mode: bicubic;

    &:not([src]) {
        visibility: hidden;
    }

    &:where(.aligncenter, .align-center) {
        display: block;
        margin-left: auto;
        margin-right: auto;
    }
}

:is([type="submit"], [type="reset"], [type="button"]) {
    cursor: pointer;
}

figure {
    max-width: 100% !important;

    &:where(.wp-caption, .caption) {
        display: block;

        img {
            display: inline-block;
        }

        &:where(.wp-caption-text, .caption-text) {
            padding-top: 10px;
            color: #454545;
        }

        &:where(.aligncenter, .align-center) {
            margin-bottom: 15px;
            margin-left: auto;
            margin-right: auto;
            text-align: center;
        }
    }
}

:is(.screen-reader-text, .submenu-toggle-text, .hidden-text, .sr-only) {
    @include hidden-text;
}

:is(.clearfix, .clear) {
    @include clearfix;
}

[data-glyph]::before {
    content: attr(data-glyph);
    font-family: $awesome-font;
}

[data-glyph-after]::after {
    content: attr(data-glyph-after);
    font-family: $awesome-font;
}

// settings
.flex {
    display: flex;
}

.\!flex {
    display: flex !important;
}

.grid {
    display: grid;
}

.\!grid {
    display: grid !important;
}

.block {
    display: block;
}

.\!block {
    display: block !important;
}

.inline-block {
    display: inline-block;
}

.\!inline-block {
    display: inline-block !important;
}

.relative {
    position: relative;
}

.\!relative {
    position: relative !important;
}

.absolute {
    position: absolute;
}

.\!absolute {
    position: absolute !important;
}

// show
.md\:show {
    @include mq-max(md) {
        display: none;
    }
}

.\!md\:show {
    @include mq-max(md) {
        display: none !important;
    }
}

.lg\:show {
    @include mq-max(lg) {
        display: none;
    }
}

.\!lg\:show {
    @include mq-max(lg) {
        display: none !important;
    }
}

// hide
.hidden {
    display: none;
}

.\!hidden {
    display: none !important;
}

.md\:hidden {
    @include mq-min(md) {
        display: none;
    }
}

.\!md\:hidden {
    @include mq-min(md) {
        display: none !important;
    }
}

.lg\:hidden {
    @include mq-min(lg) {
        display: none;
    }
}

.\!lg\:hidden {
    @include mq-min(lg) {
        display: none !important;
    }
}

/** @todo flexbox & grid */
.flex-x {
    @include flex-x(false);

    & > :where(.auto, .shrink) {
        width: auto;
    }

    @include mq-min(md) {
        & > :where(.t-auto, .t-shrink) {
            width: auto;
        }
    }

    @include mq-min(lg) {
        & > :where(.d-auto, .d-shrink) {
            width: auto;
        }
    }
}

.flex-y {
    @include flex-y(false);

    & > .cell {
        height: auto;
        max-height: none;
    }
}

.grid-x {
    @include grid-x(false);
}

.grid-y {
    @include grid-y(false);
}

.cell {
    @include cell();

    &.auto {
        @include flex-auto;
    }

    &.stretch {
        width: 100%;
    }

    @include mq-min(md) {
        &.t-auto {
            @include flex-auto;
        }

        &.t-stretch {
            width: 100%;
        }
    }

    @include mq-min(lg) {
        &.d-auto {
            @include flex-auto;
        }

        &.d-stretch {
            width: 100%;
        }
    }
}

:is(.grid-gap, .flex-gap, .gap) {
    @include media-gap($gap-xs, $gap, false);
}

.flex-padding-x {
    @include flex-padding-x($gutter-xs, $gutter);
}

.flex-padding-y {
    @include flex-padding-y($gutter-xs, $gutter);
}

// layout container
:is(.container, .flex-container, .grid-container) {
    @include container($gutter-xs, $gutter, false, false);

    &:not(.full) {
        &.\2xl {
            @include mq-min(2xl) {
                max-width: map-get($container-max-widths, 2xl);
            }
        }

        &.\3xl {
            @include mq-min(3xl) {
                max-width: map-get($container-max-widths, 3xl);
            }
        }
    }

    &.full {
        max-width: 100%;
        padding-left: 0;
        padding-right: 0;
    }

    &.fluid {
        max-width: 100%;
    }
}

/** @todo layout */
@for $i from 1 through $grid-columns-max {

    :is(.flex, .\!flex) {
        &.m-up-#{$i} > .cell, & > .cell.m-#{$i} {
            @include flex-self($i, 1, false);
        }

        &.gap {
            &.m-up-#{$i} > .cell, & > .cell.m-#{$i} {
                @include flex-self($i, 1, $gap-xs);
            }
        }
    }

    :is(.grid, .\!grid) {
        &.m-up-#{$i} {
            @include grid-template($i, true);
        }
    }
}

@include mq-min(md) {
    @for $i from 1 through $grid-columns-max {

        :is(.flex, .\!flex) {
            &.t-up-#{$i} > .cell, & > .cell.t-#{$i} {
                @include flex-self($i, 1, false);
            }

            &.gap {
                &.t-up-#{$i} > .cell, & > .cell.t-#{$i} {
                    @include flex-self($i, 1, $gap);
                }
            }
        }

        :is(.grid, .\!grid) {
            &.t-up-#{$i} {
                @include grid-template($i, true);
            }
        }
    }
}

@include mq-min(lg) {
    @for $i from 1 through $grid-columns-max {

        :is(.flex, .\!flex) {
            &.d-up-#{$i} > .cell, & > .cell.d-#{$i} {
                @include flex-self($i, 1, false);
            }

            &.gap {
                &.d-up-#{$i} > .cell, & > .cell.d-#{$i} {
                    @include flex-self($i, 1, $gap);
                }
            }
        }

        :is(.grid, .\!grid) {
            &.d-up-#{$i} {
                @include grid-template($i, true);
            }
        }
    }
}

/** @todo responsive viewport */
.overlay {
    position: relative;

    :where(.overlay-bg, .link-overlay) {
        @include absolute-full;
        background: transparent;
    }
}

.cover {
    display: block;
    overflow: hidden;
    position: relative;

    .cover-bg {
        @include absolute-full;
        background: transparent;
    }
}

.res {
    @include responsive-wrapper();

    &.auto {
        & > img {
            @include responsive-image-auto;
        }
    }

    &.scale {
        @include responsive-scale();
    }

    :where(iframe, embed, object, video) {
        @include absolute-full;
        border: 0;
        width: 100%;
        height: 100%;
    }
}

/** @todo aspect ratio */
:is(.ar-1-1, .ar\[1-1\]) {
    @include responsive-ratio(1, 1);
}

:is(.ar-3-2, .ar\[3-2\]) {
    @include responsive-ratio(3, 2);
}

:is(.ar-4-3, .ar\[4-3\]) {
    @include responsive-ratio(4, 3);
}

:is(.ar-16-9, .ar\[16-9\]) {
    @include responsive-ratio(16, 9);
}

:is(.ar-21-9, .ar\[21-9\]) {
    @include responsive-ratio(21, 9);
}

:is(.ar-2-1, .ar\[2-1\]) {
    @include responsive-ratio(2, 1);
}

/** @todo gutter */
$count: 0;
$count_max: 30;

//@while $count <= $count_max {
//    :is(.mt-#{$count}, .mt\[#{$count}px\]) {
//        margin-top: fs($count);
//    }
//
//    :is(.\!mt-#{$count}, .\!mt\[#{$count}px\]) {
//        margin-top: fs($count) !important;
//    }
//
//    :is(.mb-#{$count}, .mb\[#{$count}px\]) {
//        margin-bottom: fs($count);
//    }
//
//    :is(.\!mb-#{$count}, .\!mb\[#{$count}px\]) {
//        margin-bottom: fs($count) !important;
//    }
//
//    :is(.pt-#{$count}, .pt\[#{$count}px\]) {
//        padding-top: fs($count);
//    }
//
//    :is(.\!pt-#{$count}, .\!pt\[#{$count}px\]) {
//        padding-top: fs($count) !important;
//    }
//
//    :is(.pb-#{$count}, .pb\[#{$count}px\]) {
//        padding-bottom: fs($count);
//    }
//
//    :is(.\!pb-#{$count}, .\!pb\[#{$count}px\]) {
//        padding-bottom: fs($count) !important;
//    }
//
//    $count: $count + 5;
//}

/** @todo font weight */
$fw: 200;
$fw_max: 900;

@while $fw <= $fw_max {
    :is(.fw-#{$fw}, .fw\[#{$fw}\]) {
        font-weight: $fw;
    }

    :is(.\!fw-#{$fw}, .\!fw\[#{$fw}\]) {
        font-weight: $fw !important;
    }

    $fw: $fw + 100;
}

/** @todo gallery */
[id^=gallery-] {
    $gap: 10;
    @include flex-x(true);
    @include gap($gap);

    & > .gallery-item {
        @include cell();

        //a {
        //    @include responsive-wrapper();
        //    @include responsive-ratio(4, 3);
        //}
    }

    @for $i from 1 through 9 {
        &.gallery-columns-#{$i} {
            & > .gallery-item {
                @include flex-self($i, 1, $gap);
            }
        }
    }
}

//
// Custom layout
//

:is(.gap\[10\], .gap-10) {
    @include gap(10);
}

:is(.gap\[15\], .gap-15) {
    @include gap(15);
}

:is(.gap\[20\], .gap-20) {
    @include gap(20);
}

.ajax-loading {
    @include animation-loading();
}

@include keyframes(spin) {
    100% {
        transform: rotate(360deg);
    }
}

/* @todo .sharing-toolbox */
.sharing-toolbox {
    .share-title {
        bottom: 35px;
        color: $body-color;
        @include flex-align-center;
        font-size: 13px;
        font-weight: 400;
        position: relative;
        transform: rotate(-90deg);
        white-space: nowrap;

        &::before {
            background: #ccc;
            content: "";
            height: 1px;
            margin-right: 3px;
            width: 10px;
        }
    }

    .social-share {
        & > .share-label {
            display: none;
        }

        ul.share-actions {
            display: flex;
            flex-direction: column;
            list-style: none;
            margin: 0;

            & > li.share-action {
                display: flex;
                margin-bottom: 15px;

                & > button.share-button {
                    cursor: pointer;
                    opacity: 0.8;
                    transition: 0.3s;

                    &:hover {
                        opacity: 1;
                    }
                }

                &.share-action-linkedin,
                &.share-action-copy-link {
                    /*display: none !important;*/
                }
            }
        }
    }
}

/* @todo .share-icon */
.share-icon {
    background: rgb(240 240 240 / 10%);
    border: 1px solid transparentize($body-color, 0.6);
    @include box(35);
    border-radius: 50%;
    display: block;
    padding: 0;
    position: relative;

    &::before {
        margin: 0;
        @include centering-self(20);
        font-family: $awesome-font;
        @include flex-center;
        font-weight: 400;
        font-size: 17px;
    }

    &.icon-facebook {
        &::before {
            content: '\f39e';
        }
    }

    &.icon-ex {
        &::before {
            content: '\e61b'
        }
    }

    &.icon-whatsapp {
        &::before {
            content: '\f232'
        }
    }

    &.icon-messenger {
        &::before {
            content: '\f39f';
        }
    }

    &.icon-telegram {
        &::before {
            content: '\f2c6';
        }
    }

    &.icon-linkedin {
        &::before {
            content: '\f0e1';
        }
    }

    &.icon-copy-link {
        &::before {
            content: '\f0c5'
        }
    }

    &.icon-send-email, &.icon-mail {
        &::before {
            content: '\f0e0';
        }
    }

    &.icon-web-share, &.icon-share {
        &::before {
            content: '\f1e0';
        }
    }
}

//
// stars-rating
//
.stars-rating {
    overflow: hidden;
    position: relative;
    font-size: 14px;
    display: inline-flex;

    & > ul {
        align-items: center;
        display: flex;
        flex-direction: row-reverse;
        list-style: none;
        margin: 0;
        line-height: 22px;

        li {
            &::before {
                color: $orange;
                display: block;
                font-size: inherit;
                font-weight: 300;
                letter-spacing: 5px;
            }

            &.active {
                &::before {
                    font-weight: 700;
                }

                & ~ li {
                    &::before {
                        font-weight: 700;
                    }
                }
            }
        }
    }

    & > span {
        display: block;
        left: 0;
        overflow: hidden;
        pointer-events: none;
        position: absolute;
        top: .03125rem;
        transition: .2s;

        &::before {
            color: $orange;
            content: "\f005\f005\f005\f005\f005";
            display: block;
            font-family: $awesome-font;
            font-size: inherit;
            font-weight: 700;
            letter-spacing: 5px;
            line-height: 22px;
        }
    }

    &.clicked {
        & > span {
            width: 0 !important;
        }
    }

    &:not(.selected) {
        ul {
            &:hover {
                li {
                    &:hover {
                        &::before {
                            font-weight: 700;
                        }

                        & ~ li {
                            &::before {
                                font-weight: 700;
                            }
                        }
                    }
                }

                & + span {
                    width: 0 !important;
                    transition: 0.1s;
                }
            }
        }
    }
}

/** */
.comment-form-rating {
    & > label {}
    p.stars {
        margin-bottom: 0;

        & > span {
            margin-bottom: 0;
            display: flex;
            align-items: center;
            transition: 0.3s;

            & > a {
                font-size: 0;
                width: auto;
                height: auto;
                text-indent: -999em;

                &::before {
                    font-family: $awesome-font;
                    content: '\f005';
                    color: $orange;
                    font-size: 15px;
                    font-weight: 300;
                    line-height: 22px;
                    display: block;
                    padding-left: 2.5px;
                    padding-right: 2.5px;
                    position: static;
                    width: auto;
                    height: auto;
                }
            }

            /** */
            &:hover {
                & > a {
                    &::before {
                        font-weight: 700;
                    }

                    &:hover {
                        & ~ a {
                            &::before {
                                font-weight: 300;
                            }
                        }
                    }
                }
            }
        }

        /** */
        &.selected {
            & > span {
                & > a {
                    &::before {
                        font-weight: 700;
                    }

                    &.active {
                        & ~ a {
                            &::before {
                                font-weight: 300;
                            }
                        }
                    }
                }

                /** */
                &:hover {
                    & > a {
                        &::before {
                            font-weight: 700 !important;
                        }

                        &:hover {
                            & ~ a {
                                &::before {
                                    font-weight: 300 !important;
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    select#rating {
        @include hidden-text;
    }
}

/** reset */
.woocommerce p.stars:hover a::before,
.woocommerce p.stars.selected a:not(.active)::before,
.woocommerce p.stars.selected a.active~a::before,
.woocommerce p.stars.selected a.active::before,
.woocommerce p.stars a:hover~a::before {
    content: "\f005";
}

/** */
.loop-stars-rating {
    overflow: hidden;
    position: relative;
    font-size: 12px;
    display: inline-flex;

    &::before {
        color: $orange;
        content: "\f005\f005\f005\f005\f005";
        font-family: $awesome-font;
        font-weight: 300;
        letter-spacing: 5px;
        line-height: 20px;
    }

    & > span {
        left: 0;
        overflow: hidden;
        position: absolute;
        top: 0;

        &::before {
            color: $orange;
            content: "\f005\f005\f005\f005\f005";
            font-family: $awesome-font;
            font-weight: 700;
            letter-spacing: 5px;
            line-height: 20px;
            display: block;
        }
    }
}

/** */
nav.nav-pagination {
    text-align: center;
    width: 100%;

    ul.pagination {
        margin: 0;
        @include flex-center;
        @include gap(5);
        flex-wrap: wrap;

        li {
            font-weight: 500;
            height: 26px;
            padding: 0;
            min-width: 26px;
            width: auto;
            border-radius: 2px;
            @include inline-flex-center;
            line-height: normal;
            overflow: hidden;

            a, .current {
                display: block;
                height: 100%;
                width: 100%;
                line-height: inherit;
            }

            i {
                font-style: normal;
            }

            &.current, .current {
                color: #fff;
                background-color: $Primary-02;
            }
        }
    }
}

//
// Custom zf
//
.menu {
    .active {
        & > a {
            background: none;
        }
    }

    .sub-menu:not(.is-dropdown-submenu) {
        display: none;
    }
}

.dropdown.menu {
    & > li {
        & > a {
            line-height: 1.4;
            color: $link-color;
        }

        &.active,
        &.is-active,
        &.current-menu-item,
        &:hover {
            & > a {
                color: $link-hover-color;
            }
        }

        &.is-dropdown-submenu-parent > a::after {
            border: none !important;
            content: '\f0d7';
            font-family: $awesome-font;
            font-weight: 900;
            font-size: 15px;
            margin-top: -12px;
            right: 16px;
            opacity: 0.8;
        }
    }
}

/** */
.off-canvas-content {
    .menu-lines {
        @include hamburger($Primary-01, $Primary-02, 20px, 16px, 2px, 3);

        .menu-txt {
            font-size: 14px;
            font-weight: 300;
            padding-left: 30px;

            @include mq-max(md) {
                display: none;
            }
        }
    }
}

/** */
.dropdown-search {
    .trigger-s {
        &.hover {
            &::before {
                content: '\f00d';
            }
        }
    }

    &:not(.popup-overlay) {
        .dropdown-pane {
            &.is-open {
                left: 1px !important;
                right: 1px !important;
                width: calc(100% - 2px);
                padding: 0;
                font-size: 15px;
                border: none;
                background: none;

                .frm-container {
                    position: relative;
                    @include container(10, 15, false, false);
                    border: 1px solid #9a9a9a;
                    background-color: #fff;
                    border-radius: 5px;

                    input {
                        width: 100%;
                        border: none;
                        height: 40px;
                        padding-left: 25px;
                    }

                    button[type="submit"] {
                        position: absolute;
                        top: 50%;
                        transform: translateY(-50%);
                        left: 15px;

                        &::before {}

                        & > span {
                            display: none;
                        }
                    }

                    .trigger-s-close {
                        display: none;
                    }
                }
            }
        }
    }
}
